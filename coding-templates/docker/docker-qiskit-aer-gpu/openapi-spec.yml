openapi: 3.0.0
info:
  version: "1.0"
  title: Managed PlanQK Service
  description: |
    Generic API description for a managed PlanQK Service.
paths:
  /:
    get:
      tags:
        - Status API
      summary: Health checking endpoint
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    title: Status of the service
                    type: string
                    example: Service is up and running
    post:
      tags:
        - Service API
      summary: Asynchronous execution of the service
      description: Execute a quantum volume simulation via the Qiskit Aer Simulator. Choose in params whether to use GPU or not.  
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                params:
                  type: object
            example:
              params: {"gpu": true, "shots": 100, "depth": 10, "qubits": 5, "simulator_seed": 12345, "quantum_volume_seed": 0, "return_counts": false}
      responses:
        "201":
          description: Execution of the service started
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/job"
              example:
                id: 87cb778e-ac43-11ec-b909-0242ac120002
                status: PENDING
                createdAt: "2022-01-01 22:38:01"
          headers:
            Location:
              description: URL to query the status and the result of the execution
              schema:
                type: string
        "400":
          description: Invalid input
        "500":
          description: Internal server error

  /{id}:
    get:
      tags:
        - Service API
      summary: Check execution status
      parameters:
        - in: path
          name: id
          required: true
          description: The ID of a certain execution
          schema:
            type: string
      responses:
        "200":
          description: Ok
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/job"
              example:
                id: 87cb778e-ac43-11ec-b909-0242ac120002
                status: SUCCEEDED
                createdAt: "2022-01-01 22:38:08"
                startedAt: "2022-01-01 22:39:08"
                endedAt: "2022-01-01 22:40:08"
        "400":
          description: Invalid input
        "403":
          description: Forbidden
        "404":
          description: Not found
        "500":
          description: Internal server error
  /{id}/result:
    get:
      tags:
        - Service API
      summary: Get the result of an execution
      parameters:
        - in: path
          name: id
          required: true
          description: The ID of a certain execution
          schema:
            type: string
      responses:
        "200":
          description: Ok
          content:
            application/json:
              schema:
                type: object
                properties:
                  # result_counts:
                  #   type: object
                  #   description: Counts dictionary of the result
                  elapsed_seconds:
                    type: integer
                    description: Elapsed time in seconds
                  elapsed_milliseconds:
                    type: integer
                    description: Elapsed time in milliseconds
                  duration_message:
                    type: string
                    description: Elapsed time in human readable format             
              example:
                {
                # result_counts: {"00": 23, "01": 20, "10": 22, "11": 35},
                elapsed_seconds: 2,
                elapsed_milliseconds: 500,
                duration_message: "Elapsed time: 2 seconds, 500 milliseconds"
                }
        "400":
          description: Invalid input
        "403":
          description: Forbidden
        "404":
          description: Not found
        "500":
          description: Internal server error

components:
  schemas:
    job:
      type: object
      properties:
        id:
          type: string
        status:
          type: string
          enum: [UNKNOWN, PENDING, RUNNING, SUCCEEDED, FAILED]
        createdAt:
          type: string
        startedAt:
          type: string
        endedAt:
          type: string
