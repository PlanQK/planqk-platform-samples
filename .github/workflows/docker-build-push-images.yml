name: Create and publish Docker images

on:
  release:
    types: [ published ]

env:
  REGISTRY: ghcr.io
  NAMESPACE: planqk

jobs:
  build-and-push-image:
    runs-on: ubuntu-latest
    permissions:
      # Sets the permissions granted to the `GITHUB_TOKEN` for the actions in this job.
      contents: read
      packages: write
    strategy:
      matrix:
        path:
          - coding-templates/python/python-starter
          - coding-templates/python/python-starter-dwave
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
      - name: Log in to the container registry
        uses: docker/login-action@v3
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
      - name: Extract metadata (tags, labels) for Docker
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: ${{ env.REGISTRY }}/${{ env.NAMESPACE }}/${{ matrix.path }}
      - name: Build and push Docker image
        uses: docker/build-push-action@v5
        with:
          context: ${{ matrix.path }}
          file: ${{ matrix.path }}/Dockerfile
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}

  build-and-push-image-to-private-registry:
    runs-on: ubuntu-latest
    permissions:
      # Sets the permissions granted to the `GITHUB_TOKEN` for the actions in this job.
      contents: read
      packages: write
    strategy:
      matrix:
        path:
          - coding-templates/python/python-starter
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
      - name: Log in to the container registry
        uses: docker/login-action@v3
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
      - name: Extract metadata (tags, labels) for Docker
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: ${{ env.REGISTRY }}/${{ env.NAMESPACE }}/${{ matrix.path }}-private
      - name: Build and push Docker image
        uses: docker/build-push-action@v5
        with:
          context: ${{ matrix.path }}
          file: ${{ matrix.path }}/Dockerfile
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
